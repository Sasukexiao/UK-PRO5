#!/sbin/busybox sh

cat << CTAG
{
    name:HMP,
    elements:[
	{ SPane:{
		title:"HMP Thresholds up/down ratios for task migrating",
		description:"Adjust HMP ratios for up/down scaling for tasks migrating from LITTLE > big domain and from big > LITTLE domain. Higher up-threshold values use less battery because use more Little domain.\n"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Profile",
		description:"Select your profile for HMP thresholds.\n",
		default:$(echo "$(/res/synapse/actions/tuning hmp)"),
		action:"tuning hmp",
		values:[Default, Performance, Battery,],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, APPLY ],
				to:[
					"hmp /sys/kernel/hmp/up_threshold",
					"hmp /sys/kernel/hmp/down_threshold"
				],
			}
		]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"HMP UP Thresholds",
		description:"",
		min:1, max:1000, unit:"", step:1,
		default:$(cat /sys/kernel/hmp/up_threshold),
		action:"hmp /sys/kernel/hmp/up_threshold"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"HMP DOWN Thresholds",
		description:"",
		min:1, max:512, unit:"", step:1,
		default:$(cat /sys/kernel/hmp/down_threshold),
		action:"hmp /sys/kernel/hmp/down_threshold"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
                title:"Power Aware Scheduling",
                description:"Power aware scheduling is a CPU capacity managing 'power scheduler' which lives by the side of the existing process scheduler. Its role is to monitor the system load and decide which CPUs that should be available to the process scheduler. It will basically attempt to “pack” small tasks into the “leftmost” CPU cores (ie. starting cpu0) to keep the other CPU cores as idle as possible, instead of spreading them evenly across all online cores. Theoretically this should increase power efficiency, with a very small cost to performance.\n"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		description:"Default is Disabled.\n",
		default:0,
		action:"generic /sys/kernel/hmp/power_migration",
		values:{
			0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"HMP Performance threshold for guaranteeing an up migration",
                min:1, max:1000, unit:"", step:1,
                default:`cat /sys/kernel/hmp/up_perf_threshold`,
                action:"generic /sys/kernel/hmp/up_perf_threshold"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"HMP Capacity floor for checking cluster perf and efficiency",
                min:1, max:1000, unit:"", step:1,
                default:`cat /sys/kernel/hmp/up_power_threshold`,
                action:"generic /sys/kernel/hmp/up_power_threshold"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"HMP UP and DOWN hysteresis.",
                description:"Maximum total capacity difference in percentage to enact scheduler power migration.\n"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"HMP UP perf hysteresis",
                min:1, max:1000, unit:"", step:1,
                default:`cat /sys/kernel/hmp/up_perf_hysteresis`,
                action:"generic /sys/kernel/hmp/up_perf_hysteresis"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
                title:"HMP Down perf hysteresis",
                min:1, max:1000, unit:"", step:1,
                default:`cat /sys/kernel/hmp/down_perf_hysteresis`,
                action:"generic /sys/kernel/hmp/down_perf_hysteresis"
        }},
	{ SSpacer:{
		height:1
	}},
        { SPane:{
                title:"HMP LITTLE Packing",
                description:"Allows the HMP Scheduler to pack small tasks into CPUs in the smallest HMP domain. Power savings at a slight cost to performance.\n"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		description:"Default is Disabled.\n",
		default:0,
		action:"generic /sys/kernel/hmp/packing_enable",
		values:{
			0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
    ]
}
CTAG
